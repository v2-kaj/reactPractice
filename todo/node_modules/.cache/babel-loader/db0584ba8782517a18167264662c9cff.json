{"ast":null,"code":"var _jsxFileName = \"/home/v2/venv/reactPractice/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\nconst Todo = props => /*#__PURE__*/_jsxDEV(\"li\", {\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"checkbox\",\n    onChange: props.onToggle,\n    checked: props.todo.checked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onDelete,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: props.todo.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = Todo;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: []\n    };\n  }\n\n  toggleTodo(id) {\n    this.setState({\n      todo: this.state.todos.map(todo => {\n        if (todo.id !== id) return todo;\n        return {\n          id: todo.id,\n          text: todo.text,\n          checked: !todo.checked\n        };\n      })\n    });\n  }\n\n  removeTodo(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  addTodo() {\n    const text = prompt(\"Todo please:  \");\n    this.setState({\n      todos: [...this.state.todos, {\n        id: id++,\n        text: text,\n        checked: false\n      }]\n    });\n    console.log(this.state.todos);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.addTodo(),\n        children: \"Add TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          onToggle: () => this.toggleTodo(todo.id),\n          onDelete: () => this.removeTodo(todo.id),\n          todo: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/v2/venv/reactPractice/src/App.js"],"names":["React","id","Todo","props","onToggle","todo","checked","onDelete","text","App","Component","constructor","state","todos","toggleTodo","setState","map","removeTodo","filter","addTodo","prompt","console","log","render"],"mappings":";;AACA,OAAOA,KAAP,MAAiB,OAAjB;AACA,OAAO,WAAP;;AAEA,IAAIC,EAAE,GAAC,CAAP;;AAEA,MAAMC,IAAI,GAAGC,KAAK,iBAChB;AAAA,0BACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAAvC;AAAiD,IAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWC;AAArE;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,cAAOJ,KAAK,CAACE,IAAN,CAAWG;AAAlB;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMN,I;;AAQN,MAAMO,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC;AADG,KAAX;AAGD;;AACHC,EAAAA,UAAU,CAACb,EAAD,EAAI;AACZ,SAAKc,QAAL,CAAc;AACZV,MAAAA,IAAI,EAAC,KAAKO,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqBX,IAAI,IAAE;AAC9B,YAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB,OAAOI,IAAP;AACpB,eAAO;AACLJ,UAAAA,EAAE,EAACI,IAAI,CAACJ,EADH;AAELO,UAAAA,IAAI,EAACH,IAAI,CAACG,IAFL;AAGLF,UAAAA,OAAO,EAAE,CAACD,IAAI,CAACC;AAHV,SAAP;AAKD,OAPI;AADO,KAAd;AAUD;;AACDW,EAAAA,UAAU,CAAChB,EAAD,EAAI;AACZ,SAAKc,QAAL,CAAc;AACZF,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAwBb,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAUA,EAA1C;AADK,KAAd;AAGD;;AAEDkB,EAAAA,OAAO,GAAE;AACT,UAAMX,IAAI,GAAEY,MAAM,CAAC,gBAAD,CAAlB;AACA,SAAKL,QAAL,CAAc;AACZF,MAAAA,KAAK,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAqB;AAACZ,QAAAA,EAAE,EAACA,EAAE,EAAN;AAAUO,QAAAA,IAAI,EAACA,IAAf;AAAqBF,QAAAA,OAAO,EAAC;AAA7B,OAArB;AADM,KAAd;AAGAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,KAAvB;AACC;;AACCU,EAAAA,MAAM,GAAE;AACN,wBACA;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAK,KAAKJ,OAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACG,KAAKP,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAqBX,IAAI,iBAC1B,QAAC,IAAD;AACE,UAAA,QAAQ,EAAE,MAAI,KAAKS,UAAL,CAAgBT,IAAI,CAACJ,EAArB,CADhB;AAEE,UAAA,QAAQ,EAAE,MAAK,KAAKgB,UAAL,CAAgBZ,IAAI,CAACJ,EAArB,CAFjB;AAGE,UAAA,IAAI,EAAEI;AAHR;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAcD;;AA/C8B;;AAkDjC,eAAeI,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React from'react'\nimport './App.css';\n\nlet id=0\n\nconst Todo = props =>(\n  <li>\n    <input type=\"checkbox\" onChange={props.onToggle} checked={props.todo.checked}/>\n    <button onClick={props.onDelete}>Delete</button> \n    <span>{props.todo.text}</span>\n  </li>\n)\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      todos:[],\n    }\n  }\ntoggleTodo(id){\n  this.setState({\n    todo:this.state.todos.map(todo=>{\n      if (todo.id !== id) return todo\n      return {\n        id:todo.id,\n        text:todo.text,\n        checked: !todo.checked\n      }\n    })\n  })\n}\nremoveTodo(id){\n  this.setState({\n    todos: this.state.todos.filter(todo => todo.id!==id)\n  })\n}\n\naddTodo(){\nconst text= prompt(\"Todo please:  \")\nthis.setState({\n  todos:[...this.state.todos,{id:id++, text:text, checked:false}],\n})\nconsole.log(this.state.todos)\n}\n  render(){\n    return (\n    <div>\n      <button onClick={()=> this.addTodo() }>Add TODO</button>\n      <ul>\n        {this.state.todos.map(todo => (\n        <Todo \n          onToggle={()=>this.toggleTodo(todo.id)}\n          onDelete={()=> this.removeTodo(todo.id)} \n          todo={todo}\n        />\n        ))}\n      </ul>\n    </div>\n    )\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}